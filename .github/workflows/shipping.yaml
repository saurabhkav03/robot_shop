name: shipping  # Workflow name

on:
  push:
    branches:
      - main
    paths:
      - '**.java'
      - .github/workflows/shipping.yaml
  pull_request:
    branches:
      - main
    paths:
      - '**.java'
      - .github/workflows/shipping.yaml

jobs:
  shipping:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu

    steps:
      - name: Setup JAVA
        run: |
          sudo apt-get install openjdk-17-jdk  # Install OpenJDK 17
          java -version  # Check Java version

      - name: Checkout repository
        uses: actions/checkout@v4  # Checkout the repository with full history
        with:
          fetch-depth: 0  # Fetch all history for accurate versioning

      - name: Install dependencies
        run: |
          mvn dependency:resolve  # Resolve Maven dependencies
          mvn package  # Package the application
        working-directory: shipping  # Run Maven commands in the shipping directory

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Set up Docker Buildx for multi-platform builds

      - name: Login to Docker Hub
        uses: docker/login-action@v3  # Login to Docker Hub with credentials from secrets
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6  # Build and push Docker image
        with:
          context: .  # Build context is the root directory
          file: shipping/Dockerfile  # Path to the Dockerfile within the shipping directory
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/shipping:${{ github.run_id }}  #Docker image tag with GitHub run ID

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest  # Runs on Ubuntu latest version
    needs: shipping  # Ensure this step runs after the shipping job completes successfully

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Checkout the repository with full history
        with:
          token: ${{ secrets.TOKEN }}  # Use token for repository access

      - name: Change tag in values file
        run: |
          git config --global user.name "Saurabh Kaveri"  # Set Git user name globally
          git config --global user.email "kaverisaurabh1998@gmail.com"  # Set Git user email globally
          sed -i 's/shipping_version: "[^"]*"/shipping_version: "'${{ github.run_id }}'"/' K8s/helm/values.yaml # Update version in Helm values.yaml using GitHub run ID
          git add K8s/helm/values.yaml  # Stage changes to values.yaml
          git commit -m "Update the values file"  # Commit changes
          git push origin main  # Push changes to the main branch
